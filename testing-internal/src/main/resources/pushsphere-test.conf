# This file uses the HOCON format.
# See https://github.com/typesafehub/config/blob/main/HOCON.md for detailed syntax.

pushsphere {
  server {
    requestTimeoutMillis = 180000
    ports = [
      {
        protocol = "http"
        port = 0
      },
      {
        protocol = "https"
        port = 0
      }
    ]

    tls {
      keyStore = "./tls.p12"
      password = "secret"
    }

    authorizers = [
      {
        type = "static"
      }
    ]

    profileSets = [
      {
        group = "talk"
        name = "main"
        profiles = [
          {
            type = "apple"
            bundleId = "com.acme.MyApp"
            endpointUri = "https://api.push.apple.com"
            credentials {
              type = "keyPair"
              keyStore = "./client.p12"
              password = "secret"
            }
            endpointGroupOptions {
              maxNumEndpoints = 5,
              selectionStrategy = "WEIGHTED_ROUND_ROBIN" # or "WEIGHTED_ROUND_ROBIN", "RAMPING_UP"
            }
            circuitBreakerOptions {
              namePrefix = "my_apple",
              failureRateThreshold = 0.6,
              minimumRequestThreshold = 1,
              circuitOpenWindowMillis = 20,
              counterSlidingWindowMillis = 30,
              counterUpdateIntervalMillis = 10
            }
          },
          {
            type = "firebase"
            endpointUri = "https://fcm.googleapis.com"
            credentials = "./pushsphere-test-service-account.json"
            # endpointGroupOptions and circuitBreakerOptions are not supported for FCM.
            retryOptions {
              # FCM_DEFAULT is a built-in retry policy that is optimized for FCM.
              # https://firebase.google.com/docs/cloud-messaging/scale-fcm#errors
              retryPolicies = [ "FCM_DEFAULT" ]
            }
          }
        ]
        allowedAccessTokens = [
          # "<scheme> <accessToken>"
          "bearer secret-token"
        ]
      }
    ]
  }

  client {
    dev {
      accessToken = "secret-token"
      profileSetGroup = "talk"
      profileSet = "main"
      authScheme = "bearer"
      # TODO(ikhoon): Acquire a real device token for testing.
      deviceToken = "change-me"
      # Respect the `PUSHSPHERE_DEVICE_TOKEN` environment variable if it is set.
      deviceToken = ${?PUSHSPHERE_DEVICE_TOKEN}
    }
  }
}
